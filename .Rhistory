str(usersynthesis)
usersynthesis = merge(chgsetbyuser,modifbyuser)
usersynthesis = merge(usersynthesis,nodemodifperuser,all=T)
usersynthesis = merge(usersynthesis,waymodifperuser,all=T)
usersynthesis = merge(usersynthesis,relationmodifperuser,all=T)
str(usersynthesis)
head(usersynthesis)
head(usersynthesis)
head(contribbyuserelem)
nmodifperuserperelem = aggregate(uid~version, data=contribbyuserelem, median)
head(nmodifperuserperelem)
nmodifperuserperelem = aggregate(version~uid, data=contribbyuserelem, median)
head(nmodifperuserperelem)
str(nmodifperuserperelem)
quantile(nmodifperuserperelem$version,probs=seq(0,1,0.1))
quantile(nmodifperuserperelem$version,probs=seq(0.9,1,0.01))
nnodemodifperuserperelem = setNames(aggregate(version~uid, data=contribbyuserelem[contribbyuserelem$elem=="n",], median),c("uid","nnodemodifperelem"))
nwaymodifperuserperelem = setNames(aaggregate(version~uid, data=contribbyuserelem[contribbyuserelem$elem=="w",], median),c("uid","nwaymodifperelem"))
nrelationmodifperuserperelem = setNames(aaggregate(version~uid, data=contribbyuserelem[contribbyuserelem$elem=="r",], median),c("uid","nrelationmodifperelem"))
nwaymodifperuserperelem = setNames(aggregate(version~uid, data=contribbyuserelem[contribbyuserelem$elem=="w",], median),c("uid","nwaymodifperelem"))
nrelationmodifperuserperelem = setNames(aggregate(version~uid, data=contribbyuserelem[contribbyuserelem$elem=="r",], median),c("uid","nrelationmodifperelem"))
usersynthesis = merge(usersynthesis,nmodifperuserperelem,all=T)
usersynthesis = merge(usersynthesis,nnodemodifperuserperelem,all=T)
usersynthesis = merge(usersynthesis,nwaymodifperuserperelem,all=T)
usersynthesis = merge(usersynthesis,nrelationmodifperuserperelem,all=T)
head(usersynthesis)
remove(nmodifperuserperelem,nnodemodifperuserperelem,nwaymodifperuserperelem,nrelationmodifperuserperelem)
plot(quantile(contribbyuserelem[contribbyuserelem$elem=="n","version"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,10),xlab="Contribution per user per element",ylab="Empirical CDF")
lines(quantile(contribbyuserelem[contribbyuserelem$elem=="w","version"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(contribbyuserelem[contribbyuserelem$elem=="r","version"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),lwd=2)
head(chgsetsynthesis)
head(modifbychgset)
modifbychgset = aggregate(cbind(elem,id)~chgset , data=useractivity, FUN=length)
plot(seq(0,1,0.001),quantile(modifbychgset$elem,probs=seq(0,1,0.001)),type="l",col="red",ylim=c(0,100),ylab="Quantile",xlab="Probability",main="Quantile function of modification quantity per change set")
plot(quantile(modifbychgset$elem,probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",xlim=c(0,100),xlab="Modification quantity per change set",ylab="Empirical CDF")
abline(h=c(0,1),v=0)
head(modifbychgset)
modifbychgset = merge(modifbychgset[,-3] , unique(useractivity[,c("chgset","uid")]))
head(modifbychgset)
plot(quantile(modifbychgset$elem,probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,100),xlab="Modification quantity per change set",ylab="Empirical CDF")
abline(h=c(0,1),v=0)
nodemodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="n",], FUN=length),c("chgset","nodemodif"))
waymodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="w",], FUN=length),c("chgset","waymodif"))
relationmodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="r",], FUN=length),c("chgset","relationmodif"))
chgsetsynthesis = merge(modifbychgset,nodemodifbychgset)
chgsetsynthesis = merge(chgsetsynthesis,waymodifbychgset)
chgsetsynthesis = merge(chgsetsynthesis,relationmodifbychgset)
str(chgsetsynthesis)
modifbychgset = aggregate(cbind(elem,id)~chgset , data=useractivity, FUN=length)
plot(quantile(modifbychgset$elem,probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,100),xlab="Modification quantity per change set",ylab="Empirical CDF")
abline(h=c(0,1),v=0)
modifbychgset = aggregate(cbind(elem,id)~chgset , data=useractivity, FUN=length)
modifbychgset = merge(modifbychgset[,-3] , unique(useractivity[,c("chgset","uid")]))
head(modifbychgset)
plot(quantile(modifbychgset$elem,probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,100),xlab="Modification quantity per change set",ylab="Empirical CDF")
abline(h=c(0,1),v=0)
modifbychgset = aggregate(cbind(elem,id)~chgset , data=useractivity, FUN=length)
modifbychgset = merge(modifbychgset[,-3] , unique(useractivity[,c("chgset","uid")]))[,c(1,3,2)]
head(modifbychgset)
nodemodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="n",], FUN=length),c("chgset","nodemodif"))
waymodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="w",], FUN=length),c("chgset","waymodif"))
relationmodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="r",], FUN=length),c("chgset","relationmodif"))
nodemodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="n",], FUN=length),c("chgset","nnodemodif"))
waymodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="w",], FUN=length),c("chgset","nwaymodif"))
relationmodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="r",], FUN=length),c("chgset","nrelationmodif"))
plot(quantile(nodemodifbychgset$nnodemodif,probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,200),xlab="Modification per user",ylab="Empirical CDF")
lines(quantile(waymodifbychgset$nwaymodif,probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(relationmodifbychgset$nrelationmodif,probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),lwd=2)
plot(quantile(nodemodifbychgset$nnodemodif,probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,200),xlab="Modification per change set",ylab="Empirical CDF")
lines(quantile(waymodifbychgset$nwaymodif,probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(relationmodifbychgset$nrelationmodif,probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
plot(quantile(nodemodifbychgset$nnodemodif,probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,100),xlab="Modification per change set",ylab="Empirical CDF")
lines(quantile(waymodifbychgset$nwaymodif,probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(relationmodifbychgset$nrelationmodif,probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),lwd=2)
str(modifbychgset)
str(nodemodifbychgset)
str(waymodifbychgset)
str(relationmodifbychgset)
chgsetsynthesis = merge(modifbychgset,nodemodifbychgset,all=T)
chgsetsynthesis = merge(chgsetsynthesis,waymodifbychgset,all=T)
chgsetsynthesis = merge(chgsetsynthesis,relationmodifbychgset,all=T)
remove(nodemodifbychgset,waymodifbychgset,relationmodifbychgset)
str(chgsetsynthesis)
head(chgsetsynthesis)
summary(chgsetsynthesis)
head(usersynthesis)
head(chgsetsynthesis)
head(elemsynthesis)
head(versionbyelem)
names(elemsynthesis) = c("type","id","nuniqcontrib","nversion")
names(chgsetsynthesis) = c("chgset","uid","nmodif","nnodemodif","nwaymodif","nrelationmodif")
head(usersynthesis)
names(usersynthesis) = c("uid","nchgset","nmodif","nnodemodif","nwaymodif","nrelationmodif","nmodifperelem","nnodemodifperelem","nwaymodifperelem","nrelationmodifperelem")
head(usersynthesis)
chgsetbegin = aggregate(chgset~ts , useractivity , min)
str(chgsetbegin)
head(chgsetbegin)
chgsetbegin = aggregate(ts~chgset , useractivity , min)
head(chgsetbegin)
str(chgsetbegin)
chgsetsynthesis$duration = difftime( chgsetsynthesis$begin , chgsetsynthesis$end , units = "min")
chgsetsynthesis = merge( chgsetsynthesis , chgsetbegin )
chgsetsynthesis = merge( chgsetsynthesis , chgsetbend )
chgsetsynthesis = merge( chgsetsynthesis , chgsetend )
chgsetend = aggregate(ts~chgset , useractivity , max)
chgsetsynthesis = merge( chgsetsynthesis , chgsetend )
chgsetsynthesis$duration = difftime( chgsetsynthesis$begin , chgsetsynthesis$end , units = "min")
head(chgsetend)
str(chgsetend)
str(chgsetbegin)
str(chgsetsynthesis)
chgsetbegin = setNames(aggregate(ts~chgset , useractivity , min),c("chgset","begin"))
chgsetend = setNames(aggregate(ts~chgset , useractivity , max),c("chgset","end"))
chgsetsynthesis = merge( chgsetsynthesis , chgsetbegin )
chgsetsynthesis = merge( chgsetsynthesis , chgsetend )
chgsetsynthesis$duration = difftime( chgsetsynthesis$begin , chgsetsynthesis$end , units = "min")
head(chgsetsynthesis)
chgsetsynthesis = chgsetsynthesis[,-2]
head(chgsetsynthesis)
head(chgsetsynthesis,10)
tail(chgsetsynthesis)
summary(chgsetsynthesis$duration)
chgsetsynthesis$duration = difftime( chgsetsynthesis$begin , chgsetsynthesis$end , units = "min")[[1]]
summary(chgsetsynthesis$duration)
chgsetsynthesis$duration = difftime( chgsetsynthesis$begin , chgsetsynthesis$end , units = "sec")[[1]]
summary(chgsetsynthesis$duration)
head(chgsetsynthesis)
useractivity[useractivity$chgset==2520,]
useractivity[useractivity$chgset==30131,]
head(chgsetsynthesis,30)
chgsetsynthesis[which.max(chgsetsynthesis$nmodif),]
useractivity[useractivity$chgset==41715719,]
head(tlnodes)
useractivity[useractivity$chgset==653744,]
View(useractivity[useractivity$chgset==653744,])
head(tlnodes)
chgsetbegin = setNames(aggregate(ts~chgset , useractivity , min),c("chgset","begin"))
chgsetbegin[chgsetbegin$chgset==653744,]
chgsetend[chgsetend$chgset==653744,]
str(chgsetsynthesis)
chgsetsynthesis = chgsetsynthesis[,-c(7,8,9)]
str(chgsetsynthesis)
chgsetsynthesis = merge( chgsetsynthesis , chgsetbegin , all=T )
chgsetsynthesis = merge( chgsetsynthesis , chgsetend , all=T )
str(chgsetsynthesis)
chgsetsynthesis = merge(modifbychgset,nodemodifbychgset,all=T)
modifbychgset = aggregate(cbind(elem,id)~chgset , data=useractivity, FUN=length)
modifbychgset = merge(modifbychgset[,-3] , unique(useractivity[,c("chgset","uid")]))[,c(1,3,2)]
head(modifbychgset)
plot(quantile(modifbychgset$elem,probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,100),xlab="Modification quantity per change set",ylab="Empirical CDF")
abline(h=c(0,1),v=0)
nodemodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="n",], FUN=length),c("chgset","nnodemodif"))
waymodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="w",], FUN=length),c("chgset","nwaymodif"))
relationmodifbychgset = setNames(aggregate(id~chgset , data=useractivity[useractivity$elem=="r",], FUN=length),c("chgset","nrelationmodif"))
plot(quantile(nodemodifbychgset$nnodemodif,probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,100),xlab="Modification per change set",ylab="Empirical CDF")
lines(quantile(waymodifbychgset$nwaymodif,probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(relationmodifbychgset$nrelationmodif,probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),lwd=2)
chgsetsynthesis = merge(modifbychgset,nodemodifbychgset,all=T)
chgsetsynthesis = merge(chgsetsynthesis,waymodifbychgset,all=T)
chgsetsynthesis = merge(chgsetsynthesis,relationmodifbychgset,all=T)
remove(nodemodifbychgset,waymodifbychgset,relationmodifbychgset)
str(chgsetbegin)
str(chgsetend)
chgsetsynthesis = merge( chgsetsynthesis , chgsetbegin , all=T )
chgsetsynthesis = merge( chgsetsynthesis , chgsetend , all=T )
chgsetsynthesis$duration = difftime( chgsetsynthesis$begin , chgsetsynthesis$end , units = "sec")[[1]]
str(chgsetsynthesis)
head(chgsetsynthesis)
?difftime
chgsetsynthesis$duration = difftime( chgsetsynthesis$end , chgsetsynthesis$begin , units = "sec")[[1]]
head(chgsetsynthesis)
chgsetsynthesis$duration = apply(chgsetsynthesis , 1 , function(x){difftime(x[["end"]] , x[["begin"]] , units="min")[[1]]})
head(chgsetsynthesis)
chgsetsynthesis$duration = apply(chgsetsynthesis , 1 , function(x){round(difftime(x[["end"]] , x[["begin"]] , units="min")[[1]],2)})
head(chgsetsynthesis)
names(chgsetsynthesis) = c("chgset","uid","nmodif","nnodemodif","nwaymodif","nrelationmodif","begin","end","duration.min")
head(chgsetsynthesis)
plot(chgsetsynthesis$nmodif , chgsetsynthesis$duration , col="red",pch=3)
abline(v=0,h=0)
plot(chgsetsynthesis$nmodif , chgsetsynthesis$duration , col="red",pch=3,cex=0.5)
abline(v=0,h=0)
plot(chgsetsynthesis$nmodif , chgsetsynthesis$duration , col="red",pch=3,cex=0.5,xlim=c(0,1000),xlab="Modif per change set",ylab="Change set duration (min)")
abline(v=0,h=0)
plot(chgsetsynthesis$nnodemodif , chgsetsynthesis$duration , col="red",pch=3,cex=0.5,xlim=c(0,1000),xlab="Modif per change set",ylab="Change set duration (min)")
abline(v=0,h=0)
plot(chgsetsynthesis$nnodemodif , chgsetsynthesis$duration , col="red",pch=3,cex=0.5,xlab="Modif per change set",ylab="Change set duration (min)")
abline(v=0,h=0)
points(chgsetsynthesis$nwaymodif , chgsetsynthesis$duration , col="blue",pch=3,cex=0.5)
points(chgsetsynthesis$nrelationmodif , chgsetsynthesis$duration , col="green",pch=3,cex=0.5)
legend("topright",legend=c("nodes","ways","relations"),col=c("red","blue","green"))
legend("topright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),pch=3)
plot(chgsetsynthesis$nnodemodif , chgsetsynthesis$duration , col="red",pch=3,cex=0.5,log="x",xlab="Modif per change set",ylab="Change set duration (min)")
points(chgsetsynthesis$nwaymodif , chgsetsynthesis$duration , col="blue",pch=3,cex=0.5,log="x")
points(chgsetsynthesis$nrelationmodif , chgsetsynthesis$duration , col="green",pch=3,cex=0.5,log="x")
userfirst = setNames(aggregate(ts~uid , useractivity , min),c("uid","begin"))
userlast = setNames(aggregate(ts~uid , useractivity , max),c("uid","end"))
usersynthesis = merge( usersynthesis , userfirst , all=T )
usersynthesis = merge( usersynthesis , userlast , all=T )
summary(chgsetsynthesis)
?difftime
usersynthesis$activity.days = apply(usersynthesis , 1 , function(x){round(difftime(x[["last"]] , x[["first"]] , units="days")[[1]],2)})
userfirst = setNames(aggregate(ts~uid , useractivity , min),c("uid","first"))
userlast = setNames(aggregate(ts~uid , useractivity , max),c("uid","last"))
usersynthesis = merge( usersynthesis , userfirst , all=T )
usersynthesis = merge( usersynthesis , userlast , all=T )
usersynthesis$activity.days = apply(usersynthesis , 1 , function(x){round(difftime(x[["last"]] , x[["first"]] , units="days")[[1]],2)})
head(usersynthesis)
usersynthesis = usersynthesis[,-c(11,12)]
head(usersynthesis)
plot(usersynthesis$chgset , usersynthesis$activity.days , col="red",pch=3,cex=0.5,log="x",xlab="Change set per user",ylab="User activity (days)")
str(usersynthesis)
summary(usersynthesis)
plot(usersynthesis$nchgset , usersynthesis$activity.days , col="red",pch=3,cex=0.5,log="x",xlab="Change set per user",ylab="User activity (days)")
plot(usersynthesis$nchgset , usersynthesis$activity.days , col="red",pch=3,cex=0.5,xlab="Change set per user",ylab="User activity (days)")
plot(usersynthesis$nchgset , usersynthesis$activity.days , col="red",pch=3,cex=0.5,log="x",xlab="Change set per user",ylab="User activity (days)")
plot(usersynthesis$nchgset , usersynthesis$activity.days , col="red",pch=3,cex=0.5,xlim=c(0,100),xlab="Change set per user",ylab="User activity (days)")
abline(v=0,h=0)
names(usersynthesis) = c("uid","nchgset","nmodif","nnodemodif","nwaymodif","nrelationmodif","nmodifperelem","nnodemodifperelem","nwaymodifperelem","nrelationmodifperelem","first","last","activity.days")
head(elemsynthesis)
elembegin = setNames(aggregate(ts~elem+id , useractivity , min)[,-3],c("id","creation"))
head(elembegin)
elembegin = setNames(aggregate(ts~elem+id , useractivity , min),c("elem","id","creation"))
elemend = setNames(aggregate(ts~elem+id , useractivity , max),c("elem","id","lastmodif"))
head(elemsynthesis)
elemsynthesis = merge( elemsynthesis , elembegin , all=T )
elemsynthesis = merge( elemsynthesis , elemend , all=T )
head(elemsynthesis)
elemsynthesis = elemsynthesis[,-2]
head(elemsynthesis)
summary(elemsynthesis)
elemsynthesis$lifecycle = apply(elemsynthesis , 1 , function(x){round(difftime(x[["lastmodif"]] , x[["creation"]] , units="days")[[1]],2)})
summary(elemsynthesis)
timehorizon = as.POSIXct("2017-02-13 0:00:00")
timehorizon
elemsynthesis[1,"creation"]
difftime(timehorizon,elemsynthesis[1,"creation"])
difftime(timehorizon,elemsynthesis[1,"creation"])[[1]]
head(useractivity)
head(tlnodes)
elemsynthesis$available = rep(F,nrow(elemsynthesis))
elemsynthesis$available = rep(T,nrow(elemsynthesis))
updatedelem = function(data){
# Recover last version of nodes
upddata = aggregate(version~id , data=data , FUN=max)
upddata = merge(data,upddata)
upddata = upddata[order(upddata$id),]
}
nodes = updatedelem(tlnodes)
ways = updatedelem(tlways)
relations = updatedelem(tlrelations)
###############
head(nodes)
str(nodes[!nodes$visible,"id"])
str(nodes[nodes$visible=="False","id"])
table(nodes$visible)
delnodes = nodes[nodes$lon==Inf,"id"]
str(delnodes)
delways = ways[ways$nnodes==0,"id"]
delrelations = relations[relations$nmembers==0,"id"]
str(delways)
str(delrelations)
head(ways)
head(elemsynthesis)
summary(elemsynthesis)
quantile(elemsynthesis$lifecycle,probs=seq(0.9,1,0.01))
quantile(elemsynthesis$lifecycle,probs=seq(0.8,1,0.01))
elemsynthesis[elemsynthesis$elem=="n"&elemsynthesis$id%in%delnodes,"available"] = F
elemsynthesis[elemsynthesis$elem=="w"&elemsynthesis$id%in%delways,"available"] = F
elemsynthesis[elemsynthesis$elem=="r"&elemsynthesis$id%in%delrelations,"available"] = F
table(elemsynthesis$available)
sum(elemsynthesis$elem=="n"&elemsynthesis$id%in%delnodes)
sum(elemsynthesis$id%in%delnodes)
length(delnodes)
sum(elemsynthesis$type=="n"&elemsynthesis$id%in%delnodes)
sum(unique(elemsynthesis[elemsynthesis$type=="n"&elemsynthesis$id%in%delnodes,"id"]))
length(unique(elemsynthesis[elemsynthesis$type=="n"&elemsynthesis$id%in%delnodes,"id"]))
dulicated(elemsynthesis[elemsynthesis$type=="n"&elemsynthesis$id%in%delnodes,"id"])
duplicated(elemsynthesis[elemsynthesis$type=="n"&elemsynthesis$id%in%delnodes,"id"])
elemsynthesis[duplicated(elemsynthesis[elemsynthesis$type=="n"&elemsynthesis$id%in%delnodes,"id"]),]
dim(unique(elemsynthesis[,c("type","id")]))
dim(unique(elemsynthesis[elemsynthesis$type=="n",c("type","id")]))
dim(unique(elemsynthesis[elemsynthesis$type=="r",c("type","id")]))
dim(unique(elemsynthesis[elemsynthesis$type=="w",c("type","id")]))
userbyelem = aggregate(uid~elem+id,data=useractivity,FUN=function(x){length(unique(x))})
versionbyelem = aggregate(version~elem+id,data=useractivity,length)
elemsynthesis = merge(userbyelem,versionbyelem)
str(elemsynthesis)
elembegin = setNames(aggregate(ts~elem+id , useractivity , min),c("elem","id","creation"))
elemend = setNames(aggregate(ts~elem+id , useractivity , max),c("elem","id","lastmodif"))
elemsynthesis_ = elemsynthesis
elemsynthesis = merge( elemsynthesis , elembegin )
head(elemsynthesis)
elemsynthesis = merge( elemsynthesis , elemend )
head(elemsynthesis)
elemsynthesis_ = elemsynthesis
elemsynthesis$available = rep(T,nrow(elemsynthesis))
elemsynthesis_ = elemsynthesis
str(delnodes)
str(delways)
str(delrelations)
elemsynthesis[elemsynthesis$elem=="n"&elemsynthesis$id%in%delnodes,"available"] = F
elemsynthesis[elemsynthesis$elem=="w"&elemsynthesis$id%in%delways,"available"] = F
elemsynthesis[elemsynthesis$elem=="r"&elemsynthesis$id%in%delrelations,"available"] = F
table(elemsynthesis$available)
head(elemsynthesis)
elemsynthesis_ = elemsynthesis
table(elemsynthesis$available,elemsynthesis$elem)
elemsynthesis$lifecycle = apply(elemsynthesis , 1 , function(x){round(difftime(x[["lastmodif"]] , x[["creation"]] , units="days")[[1]],2)})
head(elemsynthesis)
remove(elemsynthesis_)
remove(elemsynthesis_,elembegin,elemend)
elemsynt = elemsynthesis
elemsynthesis[elemsynthesis$available,"lifecycle"] = apply(elemsynthesis , 1 , function(x){round(difftime(timehorizon , x[["creation"]] , units="days")[[1]],2)})
elemsynthesis = elemsynt
head(elemsynthesis)
elemsynthesis[elemsynthesis$available,"lifecycle"] = apply(elemsynthesis[elemsynthesis$available,] , 1 , function(x){round(difftime(timehorizon , x[["creation"]] , units="days")[[1]],2)})
summary(elemsynthesis)
summary(elemsynthesis[elemsynthesis$available,"lifecycle"])
summary(elemsynthesis[!elemsynthesis$available,"lifecycle"])
elemsynthesis$lifeend = rep(timehorizon,nrow(elemsynthesis))
elemsynthesis[!elemsynthesis$available,"lifeend"] = elemsynthesis[!elemsynthesis$available,"lastmodif"]
summary(elemsynthesis)
head(elemsynthesis)
names(elemsynthesis) = c("type","id","nuniqcontrib","nversion","creation","lastmodif","available","lifecycle.days","lifeend")
head(elemsynthesis)
remove(elemsynt)
remove(modifbyuser,modifbychgset)
remove(contribbyuserelem)
remove(nodemodifperuser)
remove(relationmodifperuser)
remove(userfirst)
remove(userbyelem,userlast)
remove(waymodifperuser)
remove(versionbyelem)
remove(delnodes,delways,delrelations)
remove(notag)
save.image("/home/rde/Documents/osland-ia/data/bordeaux-metropole.RData")
remove(chgsetbyuser,chgsetbegin,chgsetend)
save.image("/home/rde/Documents/osland-ia/data/bordeaux-metropole.RData")
write.csv(usersynthesis,"/home/rde/Documents/osland-ia/data/bordeaux-metropole-users.csv")
write.csv(chgsetsynthesis,"/home/rde/Documents/osland-ia/data/bordeaux-metropole-changesets.csv")
write.csv(elemsynthesis,"/home/rde/Documents/osland-ia/data/bordeaux-metropole-elements.csv")
write.csv(useractivity,"/home/rde/Documents/osland-ia/data/bordeaux-metropole-fullactivity.csv")
write.csv(nodes,"/home/rde/Documents/osland-ia/data/bordeaux-metropole-nodes.csv")
write.csv(ways,"/home/rde/Documents/osland-ia/data/bordeaux-metropole-ways.csv")
write.csv(relations,"/home/rde/Documents/osland-ia/data/bordeaux-metropole-relations.csv")
write.csv(tlnodes,"/home/rde/Documents/osland-ia/data/bordeaux-metropole-node-history.csv")
write.csv(tlways,"/home/rde/Documents/osland-ia/data/bordeaux-metropole-way-history.csv")
write.csv(tlrelations,"/home/rde/Documents/osland-ia/data/bordeaux-metropole-relation-history.csv")
plot(cars)
tlnodes = read.csv("/home/rde/data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
tlnodes = read.csv("/home/rde/data/bordeaux-metropole/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
tlways = read.csv("/home/rde/data/bordeaux-metropole/latest-bordeaux-metropole-way-timeline.csv",stringsAsFactors = F)
tlrelations = read.csv("/home/rde/data/bordeaux-metropole/latest-bordeaux-metropole-relation-timeline.csv",stringsAsFactors = F)
tlnodes = read.csv("../data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
tlnodes = read.csv("data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
ls()
tlnodes = read.csv("/data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
system("ls")
system("ls data")
system("ls data -la")
system("ls data -laf")
system("ls data -af")
system("ls data -a")
system("ls data -la")
system("ls data -lah")
getwd()
system("ls data")
tlnodes = read.csv("data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
setwd("/home/rde/Documents/osland-ia")
library("knitr")
setwd("/home/rde/Documents/osland-ia")
library("knitr")
root.dir("/home/rde/Documents/osland-ia")
install.packages("knitr")
library("knitr")
root.dir("/home/rde/Documents/osland-ia")
library("knitr")
knitr::root.dir("/home/rde/Documents/osland-ia")
library("knitr")
setwd("/home/rde/Documents/osland-ia")
tlnodes = read.csv("data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
system("ls data")
tlnodes = read.csv("~/data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
tlnodes = read.csv("~/data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
tlnodes = read.csv("data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
print(getwd())
tlnodes = read.csv("data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
print(getwd())
tlnodes = read.csv("../data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
tlways = read.csv("../data/latest-bordeaux-metropole-way-timeline.csv",stringsAsFactors = F)
tlrelations = read.csv("../data/latest-bordeaux-metropole-relation-timeline.csv",stringsAsFactors = F)
print(getwd()) # print the working directory path
tlnodes = read.csv("../data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
tlways = read.csv("../data/latest-bordeaux-metropole-way-timeline.csv",stringsAsFactors = F)
tlrelations = read.csv("../data/latest-bordeaux-metropole-relation-timeline.csv",stringsAsFactors = F)
userbyelem = aggregate(uid~elem+id,data=useractivity,FUN=function(x){length(unique(x))})
plot(quantile(userbyelem[userbyelem$elem=="n","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,20),xlab="Unique contributor quantity per element",ylab="Empirical CDF")
lines(quantile(userbyelem[userbyelem$elem=="w","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(userbyelem[userbyelem$elem=="r","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
boxplot(userbyelem$uid~userbyelem$elem,ylim=c(0,10),col=c("pink","lightblue","lightgreen"),border=c("red","blue","green"))
plot(quantile(userbyelem[userbyelem$elem=="n","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,20),xlab="Unique contributor quantity per element",ylab="Empirical CDF")
lines(quantile(userbyelem[userbyelem$elem=="w","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(userbyelem[userbyelem$elem=="r","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"))
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),pch=151)
plot(quantile(userbyelem[userbyelem$elem=="n","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,20),xlab="Unique contributor quantity per element",ylab="Empirical CDF")
lines(quantile(userbyelem[userbyelem$elem=="w","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(userbyelem[userbyelem$elem=="r","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),pch=151)
plot(quantile(userbyelem[userbyelem$elem=="n","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,20),xlab="Unique contributor quantity per element",ylab="Empirical CDF")
lines(quantile(userbyelem[userbyelem$elem=="w","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(userbyelem[userbyelem$elem=="r","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"))
plot(quantile(userbyelem[userbyelem$elem=="n","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,20),xlab="Unique contributor quantity per element",ylab="Empirical CDF")
lines(quantile(userbyelem[userbyelem$elem=="w","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(userbyelem[userbyelem$elem=="r","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),pch=133)
plot(quantile(userbyelem[userbyelem$elem=="n","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,20),xlab="Unique contributor quantity per element",ylab="Empirical CDF")
lines(quantile(userbyelem[userbyelem$elem=="w","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(userbyelem[userbyelem$elem=="r","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),lwd=2)
versionbyelem = aggregate(version~elem+id,data=useractivity,length)
plot(elemsynthesis$uid,elemsynthesis$version,col=elemsynthesis$elem,pch=3,cex=0.5,xlab="Number of unique contributors",ylab="Number of versions",main="Element building",ylim=c(0,600))
elemsynthesis = merge(userbyelem,versionbyelem)
remove(userbyelem,versionbyelem)
plot(elemsynthesis$uid,elemsynthesis$version,col=elemsynthesis$elem,pch=3,cex=0.5,xlab="Number of unique contributors",ylab="Number of versions",main="Element building",ylim=c(0,600))
lines(1:2000,1:2000,lty="dotted",col="grey")
abline(v=0,h=0)
legend("topleft",legend=c("nodes","ways","relations"),col=1:3,pch=3)
plot(elemsynthesis$uid,elemsynthesis$version,col=elemsynthesis$elem,pch=3,cex=0.5,xlab="Number of unique contributors",ylab="Number of versions",main="Element building",ylim=c(0,600))
lines(1:2000,1:2000,lty="dotted",col="grey")
abline(v=0,h=0)
legend("topleft",legend=c("nodes","ways","relations"),col=1:3,pch=3)
versionbyelem = aggregate(version~elem+id,data=useractivity,length)
plot(quantile(versionbyelem[versionbyelem$elem=="n","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,20),xlab="Unique contributor quantity per element",ylab="Empirical CDF")
lines(quantile(versionbyelem[versionbyelem$elem=="w","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(versionbyelem[versionbyelem$elem=="r","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),lwd=2)
plot(quantile(versionbyelem[versionbyelem$elem=="n","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,20),xlab="Versions per element",ylab="Empirical CDF")
lines(quantile(versionbyelem[versionbyelem$elem=="w","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(versionbyelem[versionbyelem$elem=="r","uid"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),lwd=2)
plot(quantile(versionbyelem[versionbyelem$elem=="n","version"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,20),xlab="Versions per element",ylab="Empirical CDF")
lines(quantile(versionbyelem[versionbyelem$elem=="w","version"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(versionbyelem[versionbyelem$elem=="r","version"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),lwd=2)
plot(quantile(versionbyelem[versionbyelem$elem=="n","version"],probs=seq(0,1,0.001)),seq(0,1,0.001),type="l",col="red",lwd=2,xlim=c(0,80),xlab="Versions per element",ylab="Empirical CDF")
lines(quantile(versionbyelem[versionbyelem$elem=="w","version"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="blue",lwd=2)
lines(quantile(versionbyelem[versionbyelem$elem=="r","version"],probs=seq(0,1,0.001)),seq(0,1,0.001),col="green",lwd=2)
abline(h=c(0,1),v=0)
legend("bottomright",legend=c("nodes","ways","relations"),col=c("red","blue","green"),lwd=2)
tlnodes$ts = as.POSIXct(tlnodes$ts)
tlways$ts = as.POSIXct(tlways$ts)
tlrelations$ts = as.POSIXct(tlrelations$ts)
useractivity = cbind(elem=rep("n",nrow(tlnodes)),tlnodes[,c("id","version","uid","chgset","ts","ntags")])
useractivity = cbind(elem=rep("n",nrow(tlnodes)),tlnodes[,c("id","version","uid","chgset","ts")])
useractivity = rbind( useractivity , cbind(elem=rep("w",nrow(tlways)),tlways[,c("id","version","uid","chgset","ts","ntags")]) )
print(getwd()) # print the working directory path
tlnodes = read.csv("../data/latest-bordeaux-metropole-node-timeline.csv",stringsAsFactors = F)
tlways = read.csv("../data/latest-bordeaux-metropole-way-timeline.csv",stringsAsFactors = F)
tlrelations = read.csv("../data/latest-bordeaux-metropole-relation-timeline.csv",stringsAsFactors = F)
tlrelations$ts = as.POSIXct(tlrelations$ts)
tlnodes$ts = as.POSIXct(tlnodes$ts)
tlways$ts = as.POSIXct(tlways$ts)
tlrelations$ts = as.POSIXct(tlrelations$ts)
useractivity = cbind(elem=rep("n",nrow(tlnodes)),tlnodes[,c("id","version","uid","chgset","ts","ntags")])
useractivity = rbind( useractivity , cbind(elem=rep("w",nrow(tlways)),tlways[,c("id","version","uid","chgset","ts","ntags")]) )
useractivity = rbind( useractivity , cbind(elem=rep("r",nrow(tlrelations)),tlrelations[,c("id","version","uid","chgset","ts","ntags")]) )
useractivity = useractivity[order(useractivity$ts),]
str(elemsynthesis)
elembegin = setNames(aggregate(ts~elem+id , useractivity , min),c("elem","id","creation"))
elemend = setNames(aggregate(ts~elem+id , useractivity , max),c("elem","id","lastmodif"))
elemsynthesis = merge( elemsynthesis , elembegin )
elemsynthesis = merge( elemsynthesis , elemend )
remove(elembegin,elemend)
elemsynthesis$lifecycle = apply(elemsynthesis , 1 , function(x){round(difftime(x[["lastmodif"]] , x[["creation"]] , units="days")[[1]],2)})
elemsynthesis$available = rep(T,nrow(elemsynthesis))
delnodes = nodes[nodes$lon==Inf,"id"]
delways = ways[ways$nnodes==0,"id"]
delrelations = relations[relations$nmembers==0,"id"]
elemsynthesis[elemsynthesis$elem=="n"&elemsynthesis$id%in%delnodes,"available"] = F
elemsynthesis[elemsynthesis$elem=="w"&elemsynthesis$id%in%delways,"available"] = F
elemsynthesis[elemsynthesis$elem=="r"&elemsynthesis$id%in%delrelations,"available"] = F
remove(delnodes,delways,delrelations)
timehorizon = as.POSIXct("2017-02-13 0:00:00") # date of OSM data extraction
elemsynthesis[elemsynthesis$available,"lifecycle"] = apply(elemsynthesis[elemsynthesis$available,] , 1 , function(x){round(difftime(timehorizon , x[["creation"]] , units="days")[[1]],2)})
names(elemsynthesis) = c("type","id","nuniqcontrib","nversion","creation","lastmodif","available","lifecycle.days","lifeend")
names(elemsynthesis) = c("type","id","nuniqcontrib","nversion","creation","lastmodif","available","lifecycle.days")
summary(elemsynthesis)
kable(head(elemsynthesis))
names(elemsynthesis) = c("type","id","nuniqcontrib","nversion","creation","lastmodif","lifecycle.days","available")
summary(elemsynthesis)
kable(head(elemsynthesis))
